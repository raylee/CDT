#!/bin/bash

# Author: Jonah Miller (jonah.maxwell.miller@gmail.com)
# Time-stamp: <2012-10-31 20:51:40 (jonah)>

# This is a short script to write a script for each file given as
# input and submit it to the janus que.


# Your Variables
# ----------------------------------------------------------------------
# Where the program runs
WORKING_DIRECTORY=/projects/jonah/CDT/2p1-fixed-boundaries 
# Where output files go. Output works a little differently. Each job
# gets its own output folder. But this is the root directory.
OUTPUT_ROOT=/lustre/janus_scratch/jonah
# Shell you want to use. Unless you have a good reason, leave this alone.
SHEBANG='#!/bin/bash'
# The script command. Defaults to SBCL
SCRIPTCOMMAND="sbcl --dynamic-space-size 1220 --script"

# Torque Variables
# ----------------------------------------------------------------------
# Controls for Torque. Don't set the output directory. The script does
# that in a clever way for you.

TORQUE_PREFIX="#PBS " # Prefix. Useful later.
# Put commands for Torque here. 
TORQUE_COMMANDS='
#PBS -l walltime=01:00:01:00" # Walltime. dd:hh:mm:ss
#PBS -l mem=2gb" # RAM assignment.
#PBS -l vmem=2gb" # Virtual memory
#PBS -l procs=1" # Processors you want.
#PBS -j oe" # Merge standard and error outputs.
#PBS -M jonah.maxwell.miller@gmail.com" # email address
#PBS -m abe" # email me if anything happens.
#PBS -q janus-long" # The que to submit to.
#PBS -V" # Transfer all local variables.
'
# There's a torque command for handling output directories too, but
# the script handles that itself.

# Variables we want the script to keep (they're important).
PROJECT_HOME=/projects/jonah
SBCL=${PROJECT_HOME}/sbcl-1.0.58
SBCL_HOME=${SBCL}/lib/sbcl
SBCLBIN=${SBCL}/bin
PATH=.:$SBCLBIN:$PATH
# ----------------------------------------------------------------------

# Now, as we begin, we need to know what directory all these files are in.
SCRIPTDIR=$(pwd)
# Log file
LOGFILE="$(date).qsub.log"

# Now we build the scripts.
for i in $@; do # only works if the filenames have no spaces!
    # make an output directory
    outdir=$OUTPUT_ROOT/$i.output
    mkdir $outdir
    # Print to the new script
    echo $SHEBANG > $i.sh
    echo '' >> $i.sh
    echo $TORQUE_COMMANDS >> $i.sh

    # Some torque commands that have to be run separately:
    # the working directory
    echo "#PBS -d $WORKING_DIRECTORY" >> $i.sh 
    echo "#PBS -w $WORKING_DIRECTORY" >> $i.sh
    # Defines the output directory
    echo "#PBS -o $outdir" >> $i.sh 

    # Ensure work done in the directory where the program binaries are.
    echo '' >> $i.sh
    echo "cd $WORKING_DIRECTORY" >> $i.sh
    echo '' >> $i.sh

    # Tell the script what to do.
    echo $SCRIPTCOMMAND $SCRIPTDIR/$i >> $i.sh

    # Submit the script.
    qsub $i.sh >> $LOGFILE
